{
    "type": [
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        2,
        3,
        3,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        2,
        3,
        0,
        1,
        3,
        2,
        3,
        3,
        0,
        1,
        3,
        2,
        3,
        3,
        2,
        2,
        2,
        2,
        2,
        2,
        3,
        3,
        2,
        2,
        3,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        3,
        3,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        2,
        3,
        3,
        2,
        3,
        3,
        2,
        3,
        3,
        2,
        3,
        3,
        2,
        3,
        3,
        2,
        3,
        3,
        2,
        3,
        3,
        2,
        2,
        3,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        3,
        3,
        2,
        3,
        3,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        3,
        3,
        2,
        3,
        3,
        2,
        3,
        3,
        2,
        2,
        3,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        2
    ],
    "data": [
        "[1] \"WOS:001272756600008\"\n[1] \"WOS:001272101600001\"\n[1] \"WOS:001272423400001\"\n[1] \"WOS:001234953400009\"\n[1] \"WOS:001272816500001\"\n[1] \"WOS:001272815000001\"\n[1] \"WOS:001272814700001\"\n[1] \"WOS:001272697500013\"\n[1] \"WOS:001271832100001\"\n[1] \"WOS:001272816000001\"\n[1] \"WOS:001273099300001\"\n[1] \"WOS:001256619700278\"\n[1] \"WOS:001273057900001\"\n[1] \"WOS:001272122700001\"\n[1] \"WOS:001272545000001\"\n[1] \"WOS:001271887300006\"\n[1] \"WOS:001241648000004\"\n[1] \"WOS:001272187000001\"\n[1] \"WOS:001272816100001\"\n[1] \"WOS:001272815",
        "100001\"\n[1] \"WOS:001272756600006\"\n[1] \"WOS:001272421900001\"\n[1] \"WOS:001272946200001\"\n[1] \"WOS:001272912100001\"\n[1] \"WOS:001272028400009\"\n[1] \"WOS:001272984000001\"\n[1] \"WOS:001273111800001\"\n[1] \"WOS:001272669700001\"\n[1] \"WOS:001272479200001\"\n[1] \"WOS:001272889800001\"\n[1] \"WOS:001272840000003\"\n[1] \"WOS:001264845300052\"\n[1] \"WOS:001264845300065\"\n[1] \"WOS:001253918900005\"\n[1] \"WOS:001253884500036\"\n[1] \"WOS:001272222400001\"\n[1] \"WOS:001272777100001\"\n[1] \"WOS:001270156100001\"\n[1] \"WOS:001271885300001\"\n[1] \"WOS:0",
        "01271796400001\"\n[1] \"WOS:001272256900001\"\n[1] \"WOS:001271890500001\"\n[1] \"WOS:001272099900001\"\n[1] \"WOS:001272301200001\"\n[1] \"WOS:001272290400001\"\n[1] \"WOS:001271848300001\"\n[1] \"WOS:001272032500001\"\n[1] \"WOS:001272169500001\"\n[1] \"WOS:001272295700024\"\n[1] \"WOS:001272158500001\"\n[1] \"WOS:001271712900001\"\n[1] \"WOS:001250972400003\"\n[1] \"WOS:001272723900001\"\n[1] \"WOS:001250102600003\"\n[1] \"WOS:001271551700001\"\n[1] \"WOS:001271312100016\"\n[1] \"WOS:001271246800005\"\n[1] \"WOS:001272060100001\"\n[1] \"WOS:001271284100004\"\n[1",
        "] \"WOS:001271918700001\"\n[1] \"WOS:001265199000036\"\n[1] \"WOS:001226680300016\"\n[1] \"WOS:001271578300002\"\n[1] \"WOS:001272372800004\"\n[1] \"WOS:001271516100001\"\n[1] \"WOS:001271629000001\"\n[1] \"WOS:001271944300003\"\n[1] \"WOS:001271299500001\"\n[1] \"WOS:001271303100001\"\n[1] \"WOS:001272244700001\"\n[1] \"WOS:001271828100001\"\n[1] \"WOS:001268265400001\"\n[1] \"WOS:001271428900009\"\n[1] \"WOS:001271939500001\"\n[1] \"WOS:001196800603007\"\n[1] \"WOS:001272600500001\"\n[1] \"WOS:001272266100001\"\n[1] \"WOS:001271353200001\"\n[1] \"WOS:00127222510",
        "0001\"\n[1] \"WOS:001270390400035\"\n[1] \"WOS:001270390400001\"\n[1] \"WOS:001270390400091\"\n[1] \"WOS:001270390400003\"\n[1] \"WOS:001268499100001\"\n[1] \"WOS:001270230700001\"\n[1] \"WOS:001269601900001\"\n[1] \"WOS:001243933100063\"\n[1] \"WOS:001263223100010\"\n[1] \"WOS:001267270000001\"\n[1] \"WOS:001270672000001\"\n[1] \"WOS:001270782900001\"\n[1] \"WOS:001265226600027\"\n[1] \"WOS:001271186000001\"\n[1] \"WOS:001271719500001\"\n[1] \"WOS:001271182100001\"\n[1] \"WOS:001266670000005\"\n[1] \"WOS:001271185200001\"\n[1] \"WOS:001271399400001\"\n[1] \"WOS:001",
        "270990500001\"\n[1] \"WOS:001270539400003\"\n",
        "> ",
        "output <- \"\"",
        "> ",
        "> ",
        "for(i in rownames(initial_json$Data$Records$records$REC)) {",
        "+ ",
        "  record <- initial_json$Data$Records$records$REC[i, ]",
        "+ ",
        "  print(record$UID)",
        "+ ",
        "  output <- paste(output, \"AU \", fetch_author_names(record$static_data$summary$names$name[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TI \", fetch_doc_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SO \", fetch_source_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"JI \", fetch_source_abbreviation(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DT \", record$static_data$summary$doctypes$doctype[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DE \", fetch_keywords(record$static_data$fullrecord_metadata$keywords$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ID \", fetch_keywords(record$static_data$item$keywords_plus$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TC \", fetch_times_cited(record$dynamic_data$citation_related$tc_list$silo_tc[[1]]))",
        "+ ",
        "  output <- paste(output, \"UT \", gsub('WOS:', 'ISI', record$UID), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DB WOS\\n\\n\", sep = \"\")",
        "+ ",
        "}",
        "[1] \"WOS:001272756600008\"\n",
        "Error in fetch_times_cited(record$dynamic_data$citation_related$tc_list$silo_tc[[1]]) : \n  could not find function \"fetch_times_cited\"\n",
        "> ",
        "fetch_times_cited <- function(x) {",
        "+ ",
        "  row <- x[x$coll_id == 'WOS', ]",
        "+ ",
        "  return(row$local_count)",
        "+ ",
        "}",
        "> ",
        "output <- \"\"",
        "> ",
        "> ",
        "for(i in rownames(initial_json$Data$Records$records$REC)) {",
        "+ ",
        "  record <- initial_json$Data$Records$records$REC[i, ]",
        "+ ",
        "  print(record$UID)",
        "+ ",
        "  output <- paste(output, \"AU \", fetch_author_names(record$static_data$summary$names$name[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TI \", fetch_doc_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SO \", fetch_source_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"JI \", fetch_source_abbreviation(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DT \", record$static_data$summary$doctypes$doctype[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DE \", fetch_keywords(record$static_data$fullrecord_metadata$keywords$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ID \", fetch_keywords(record$static_data$item$keywords_plus$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TC \", fetch_times_cited(record$dynamic_data$citation_related$tc_list$silo_tc[[1]]))",
        "+ ",
        "  output <- paste(output, \"UT \", gsub('WOS:', 'ISI', record$UID), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DB WOS\\n\\n\", sep = \"\")",
        "+ ",
        "}",
        "[1] \"WOS:001272756600008\"\n[1] \"WOS:001272101600001\"\n[1] \"WOS:001272423400001\"\n[1] \"WOS:001234953400009\"\n[1] \"WOS:001272816500001\"\n[1] \"WOS:001272815000001\"\n[1] \"WOS:001272814700001\"\n[1] \"WOS:001272697500013\"\n[1] \"WOS:001271832100001\"\n[1] \"WOS:001272816000001\"\n[1] \"WOS:001273099300001\"\n[1] \"WOS:001256619700278\"\n[1] \"WOS:001273057900001\"\n[1] \"WOS:001272122700001\"\n[1] \"WOS:001272545000001\"\n[1] \"WOS:001271887300006\"\n[1] \"WOS:001241648000004\"\n[1] \"WOS:001272187000001\"\n[1] \"WOS:001272816100001\"\n[1] \"WOS:001272815",
        "100001\"\n[1] \"WOS:001272756600006\"\n[1] \"WOS:001272421900001\"\n[1] \"WOS:001272946200001\"\n[1] \"WOS:001272912100001\"\n[1] \"WOS:001272028400009\"\n[1] \"WOS:001272984000001\"\n[1] \"WOS:001273111800001\"\n[1] \"WOS:001272669700001\"\n[1] \"WOS:001272479200001\"\n[1] \"WOS:001272889800001\"\n[1] \"WOS:001272840000003\"\n[1] \"WOS:001264845300052\"\n[1] \"WOS:001264845300065\"\n[1] \"WOS:001253918900005\"\n[1] \"WOS:001253884500036\"\n[1] \"WOS:001272222400001\"\n[1] \"WOS:001272777100001\"\n[1] \"WOS:001270156100001\"\n[1] \"WOS:001271885300001\"\n[1] \"WOS:0",
        "01271796400001\"\n[1] \"WOS:001272256900001\"\n[1] \"WOS:001271890500001\"\n[1] \"WOS:001272099900001\"\n[1] \"WOS:001272301200001\"\n[1] \"WOS:001272290400001\"\n[1] \"WOS:001271848300001\"\n[1] \"WOS:001272032500001\"\n[1] \"WOS:001272169500001\"\n[1] \"WOS:001272295700024\"\n[1] \"WOS:001272158500001\"\n[1] \"WOS:001271712900001\"\n[1] \"WOS:001250972400003\"\n[1] \"WOS:001272723900001\"\n[1] \"WOS:001250102600003\"\n[1] \"WOS:001271551700001\"\n[1] \"WOS:001271312100016\"\n[1] \"WOS:001271246800005\"\n[1] \"WOS:001272060100001\"\n[1] \"WOS:001271284100004\"\n[1",
        "] \"WOS:001271918700001\"\n[1] \"WOS:001265199000036\"\n[1] \"WOS:001226680300016\"\n[1] \"WOS:001271578300002\"\n[1] \"WOS:001272372800004\"\n[1] \"WOS:001271516100001\"\n[1] \"WOS:001271629000001\"\n[1] \"WOS:001271944300003\"\n[1] \"WOS:001271299500001\"\n[1] \"WOS:001271303100001\"\n[1] \"WOS:001272244700001\"\n[1] \"WOS:001271828100001\"\n[1] \"WOS:001268265400001\"\n[1] \"WOS:001271428900009\"\n[1] \"WOS:001271939500001\"\n[1] \"WOS:001196800603007\"\n[1] \"WOS:001272600500001\"\n[1] \"WOS:001272266100001\"\n[1] \"WOS:001271353200001\"\n[1] \"WOS:00127222510",
        "0001\"\n[1] \"WOS:001270390400035\"\n[1] \"WOS:001270390400001\"\n[1] \"WOS:001270390400091\"\n[1] \"WOS:001270390400003\"\n[1] \"WOS:001268499100001\"\n[1] \"WOS:001270230700001\"\n[1] \"WOS:001269601900001\"\n[1] \"WOS:001243933100063\"\n[1] \"WOS:001263223100010\"\n[1] \"WOS:001267270000001\"\n[1] \"WOS:001270672000001\"\n[1] \"WOS:001270782900001\"\n[1] \"WOS:001265226600027\"\n[1] \"WOS:001271186000001\"\n[1] \"WOS:001271719500001\"\n[1] \"WOS:001271182100001\"\n[1] \"WOS:001266670000005\"\n[1] \"WOS:001271185200001\"\n[1] \"WOS:001271399400001\"\n[1] \"WOS:001",
        "270990500001\"\n[1] \"WOS:001270539400003\"\n",
        "> ",
        "writeLines(output, \"file1.txt\")",
        "> ",
        "record <- initial_json$Data$Records$records$REC[12, ]",
        "> ",
        "print(record$UID)",
        "[1] \"WOS:001256619700278\"\n",
        "> ",
        "print(gsub('WOS:', 'ISI', record$UID))",
        "[1] \"ISI001256619700278\"\n",
        "> ",
        "output <- \"\"",
        "> ",
        "> ",
        "for(i in rownames(initial_json$Data$Records$records$REC)) {",
        "+ ",
        "  record <- initial_json$Data$Records$records$REC[i, ]",
        "+ ",
        "  print(record$UID)",
        "+ ",
        "  output <- paste(output, \"AU \", fetch_author_names(record$static_data$summary$names$name[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TI \", fetch_doc_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SO \", fetch_source_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"JI \", fetch_source_abbreviation(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DT \", record$static_data$summary$doctypes$doctype[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DE \", fetch_keywords(record$static_data$fullrecord_metadata$keywords$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ID \", fetch_keywords(record$static_data$item$keywords_plus$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TC \", fetch_times_cited(record$dynamic_data$citation_related$tc_list$silo_tc[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"UT \", gsub('WOS:', 'ISI', record$UID), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DB WOS\\n\\n\", sep = \"\")",
        "+ ",
        "}",
        "[1] \"WOS:001272756600008\"\n[1] \"WOS:001272101600001\"\n[1] \"WOS:001272423400001\"\n[1] \"WOS:001234953400009\"\n[1] \"WOS:001272816500001\"\n[1] \"WOS:001272815000001\"\n[1] \"WOS:001272814700001\"\n[1] \"WOS:001272697500013\"\n[1] \"WOS:001271832100001\"\n[1] \"WOS:001272816000001\"\n[1] \"WOS:001273099300001\"\n[1] \"WOS:001256619700278\"\n[1] \"WOS:001273057900001\"\n[1] \"WOS:001272122700001\"\n[1] \"WOS:001272545000001\"\n[1] \"WOS:001271887300006\"\n[1] \"WOS:001241648000004\"\n[1] \"WOS:001272187000001\"\n[1] \"WOS:001272816100001\"\n[1] \"WOS:001272815",
        "100001\"\n[1] \"WOS:001272756600006\"\n[1] \"WOS:001272421900001\"\n[1] \"WOS:001272946200001\"\n[1] \"WOS:001272912100001\"\n[1] \"WOS:001272028400009\"\n[1] \"WOS:001272984000001\"\n[1] \"WOS:001273111800001\"\n[1] \"WOS:001272669700001\"\n[1] \"WOS:001272479200001\"\n[1] \"WOS:001272889800001\"\n[1] \"WOS:001272840000003\"\n[1] \"WOS:001264845300052\"\n[1] \"WOS:001264845300065\"\n[1] \"WOS:001253918900005\"\n[1] \"WOS:001253884500036\"\n[1] \"WOS:001272222400001\"\n[1] \"WOS:001272777100001\"\n[1] \"WOS:001270156100001\"\n[1] \"WOS:001271885300001\"\n[1] \"WOS:0",
        "01271796400001\"\n[1] \"WOS:001272256900001\"\n[1] \"WOS:001271890500001\"\n[1] \"WOS:001272099900001\"\n[1] \"WOS:001272301200001\"\n[1] \"WOS:001272290400001\"\n[1] \"WOS:001271848300001\"\n[1] \"WOS:001272032500001\"\n[1] \"WOS:001272169500001\"\n[1] \"WOS:001272295700024\"\n[1] \"WOS:001272158500001\"\n[1] \"WOS:001271712900001\"\n[1] \"WOS:001250972400003\"\n[1] \"WOS:001272723900001\"\n[1] \"WOS:001250102600003\"\n[1] \"WOS:001271551700001\"\n[1] \"WOS:001271312100016\"\n[1] \"WOS:001271246800005\"\n[1] \"WOS:001272060100001\"\n[1] \"WOS:001271284100004\"\n[1",
        "] \"WOS:001271918700001\"\n[1] \"WOS:001265199000036\"\n[1] \"WOS:001226680300016\"\n[1] \"WOS:001271578300002\"\n[1] \"WOS:001272372800004\"\n[1] \"WOS:001271516100001\"\n[1] \"WOS:001271629000001\"\n[1] \"WOS:001271944300003\"\n[1] \"WOS:001271299500001\"\n[1] \"WOS:001271303100001\"\n[1] \"WOS:001272244700001\"\n[1] \"WOS:001271828100001\"\n[1] \"WOS:001268265400001\"\n[1] \"WOS:001271428900009\"\n[1] \"WOS:001271939500001\"\n[1] \"WOS:001196800603007\"\n[1] \"WOS:001272600500001\"\n[1] \"WOS:001272266100001\"\n[1] \"WOS:001271353200001\"\n[1] \"WOS:00127222510",
        "0001\"\n[1] \"WOS:001270390400035\"\n[1] \"WOS:001270390400001\"\n[1] \"WOS:001270390400091\"\n[1] \"WOS:001270390400003\"\n[1] \"WOS:001268499100001\"\n[1] \"WOS:001270230700001\"\n[1] \"WOS:001269601900001\"\n[1] \"WOS:001243933100063\"\n[1] \"WOS:001263223100010\"\n[1] \"WOS:001267270000001\"\n[1] \"WOS:001270672000001\"\n[1] \"WOS:001270782900001\"\n[1] \"WOS:001265226600027\"\n[1] \"WOS:001271186000001\"\n[1] \"WOS:001271719500001\"\n[1] \"WOS:001271182100001\"\n[1] \"WOS:001266670000005\"\n[1] \"WOS:001271185200001\"\n[1] \"WOS:001271399400001\"\n[1] \"WOS:001",
        "270990500001\"\n[1] \"WOS:001270539400003\"\n",
        "> ",
        "writeLines(output, \"file1.txt\")",
        "> ",
        "biblioshiny()",
        "\nListening on http://127.0.0.1:4478\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [========================================================================================================================================] 15.58GB/s, eta:  0s\r                                                                                                                                                                             \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n",
        "> ",
        "convert2df(\"file1.txt\")",
        "\nConverting your wos collection into a bibliographic dataframe\n\n\rindexing file1.txt [============================================================================] 15.58GB/s, eta:  0s\r                                                                                                                     \r",
        "Error in rep(1:nP, rowPapers) : invalid 'times' argument\n",
        "> ",
        "output <- \"FN Clarivate Analytics Web of Science\\nVR 1.0\\n\"",
        "> ",
        "> ",
        "for(i in rownames(initial_json$Data$Records$records$REC)) {",
        "+ ",
        "  record <- initial_json$Data$Records$records$REC[i, ]",
        "+ ",
        "  print(record$UID)",
        "+ ",
        "  output <- paste(output, \"AU \", fetch_author_names(record$static_data$summary$names$name[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TI \", fetch_doc_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SO \", fetch_source_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"JI \", fetch_source_abbreviation(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DT \", record$static_data$summary$doctypes$doctype[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DE \", fetch_keywords(record$static_data$fullrecord_metadata$keywords$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ID \", fetch_keywords(record$static_data$item$keywords_plus$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TC \", fetch_times_cited(record$dynamic_data$citation_related$tc_list$silo_tc[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"UT \", gsub('WOS:', 'ISI', record$UID), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DB WOS\\n\\n\", sep = \"\")",
        "+ ",
        "}",
        "[1] \"WOS:001272756600008\"\n[1] \"WOS:001272101600001\"\n[1] \"WOS:001272423400001\"\n[1] \"WOS:001234953400009\"\n[1] \"WOS:001272816500001\"\n[1] \"WOS:001272815000001\"\n[1] \"WOS:001272814700001\"\n[1] \"WOS:001272697500013\"\n[1] \"WOS:001271832100001\"\n[1] \"WOS:001272816000001\"\n[1] \"WOS:001273099300001\"\n[1] \"WOS:001256619700278\"\n[1] \"WOS:001273057900001\"\n[1] \"WOS:001272122700001\"\n[1] \"WOS:001272545000001\"\n[1] \"WOS:001271887300006\"\n[1] \"WOS:001241648000004\"\n[1] \"WOS:001272187000001\"\n[1] \"WOS:001272816100001\"\n[1] \"WOS:001272815",
        "100001\"\n[1] \"WOS:001272756600006\"\n[1] \"WOS:001272421900001\"\n[1] \"WOS:001272946200001\"\n[1] \"WOS:001272912100001\"\n[1] \"WOS:001272028400009\"\n[1] \"WOS:001272984000001\"\n[1] \"WOS:001273111800001\"\n[1] \"WOS:001272669700001\"\n[1] \"WOS:001272479200001\"\n[1] \"WOS:001272889800001\"\n[1] \"WOS:001272840000003\"\n[1] \"WOS:001264845300052\"\n[1] \"WOS:001264845300065\"\n[1] \"WOS:001253918900005\"\n[1] \"WOS:001253884500036\"\n[1] \"WOS:001272222400001\"\n[1] \"WOS:001272777100001\"\n[1] \"WOS:001270156100001\"\n[1] \"WOS:001271885300001\"\n[1] \"WOS:0",
        "01271796400001\"\n[1] \"WOS:001272256900001\"\n[1] \"WOS:001271890500001\"\n[1] \"WOS:001272099900001\"\n[1] \"WOS:001272301200001\"\n[1] \"WOS:001272290400001\"\n[1] \"WOS:001271848300001\"\n[1] \"WOS:001272032500001\"\n[1] \"WOS:001272169500001\"\n[1] \"WOS:001272295700024\"\n[1] \"WOS:001272158500001\"\n[1] \"WOS:001271712900001\"\n[1] \"WOS:001250972400003\"\n[1] \"WOS:001272723900001\"\n[1] \"WOS:001250102600003\"\n[1] \"WOS:001271551700001\"\n[1] \"WOS:001271312100016\"\n[1] \"WOS:001271246800005\"\n[1] \"WOS:001272060100001\"\n[1] \"WOS:001271284100004\"\n[1",
        "] \"WOS:001271918700001\"\n[1] \"WOS:001265199000036\"\n[1] \"WOS:001226680300016\"\n[1] \"WOS:001271578300002\"\n[1] \"WOS:001272372800004\"\n[1] \"WOS:001271516100001\"\n[1] \"WOS:001271629000001\"\n[1] \"WOS:001271944300003\"\n[1] \"WOS:001271299500001\"\n[1] \"WOS:001271303100001\"\n[1] \"WOS:001272244700001\"\n[1] \"WOS:001271828100001\"\n[1] \"WOS:001268265400001\"\n[1] \"WOS:001271428900009\"\n[1] \"WOS:001271939500001\"\n[1] \"WOS:001196800603007\"\n[1] \"WOS:001272600500001\"\n[1] \"WOS:001272266100001\"\n[1] \"WOS:001271353200001\"\n[1] \"WOS:00127222510",
        "0001\"\n[1] \"WOS:001270390400035\"\n[1] \"WOS:001270390400001\"\n[1] \"WOS:001270390400091\"\n[1] \"WOS:001270390400003\"\n[1] \"WOS:001268499100001\"\n[1] \"WOS:001270230700001\"\n[1] \"WOS:001269601900001\"\n[1] \"WOS:001243933100063\"\n[1] \"WOS:001263223100010\"\n[1] \"WOS:001267270000001\"\n[1] \"WOS:001270672000001\"\n[1] \"WOS:001270782900001\"\n[1] \"WOS:001265226600027\"\n[1] \"WOS:001271186000001\"\n[1] \"WOS:001271719500001\"\n[1] \"WOS:001271182100001\"\n[1] \"WOS:001266670000005\"\n[1] \"WOS:001271185200001\"\n[1] \"WOS:001271399400001\"\n[1] \"WOS:001",
        "270990500001\"\n[1] \"WOS:001270539400003\"\n",
        "> ",
        "writeLines(output, \"file1.txt\")",
        "> ",
        "convert2df(\"file1.txt\")",
        "\nConverting your wos collection into a bibliographic dataframe\n\n\rindexing file1.txt [============================================================================] 15.00GB/s, eta:  0s\r                                                                                                                     \r",
        "Error in rep(1:nP, rowPapers) : invalid 'times' argument\n",
        "> ",
        "output <- \"FN Clarivate Analytics Web of Science\\nVR 1.0\\n\"",
        "> ",
        "> ",
        "for(i in rownames(initial_json$Data$Records$records$REC)) {",
        "+ ",
        "  record <- initial_json$Data$Records$records$REC[i, ]",
        "+ ",
        "  print(record$UID)",
        "+ ",
        "  output <- paste(output, \"AU \", fetch_author_names(record$static_data$summary$names$name[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TI \", fetch_doc_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SO \", fetch_source_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"JI \", fetch_source_abbreviation(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DT \", record$static_data$summary$doctypes$doctype[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DE \", fetch_keywords(record$static_data$fullrecord_metadata$keywords$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ID \", fetch_keywords(record$static_data$item$keywords_plus$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TC \", fetch_times_cited(record$dynamic_data$citation_related$tc_list$silo_tc[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"UT \", gsub('WOS:', 'ISI', record$UID), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DB WOS\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"EF\\n\\n\", sep = \"\")",
        "+ ",
        "}",
        "[1] \"WOS:001272756600008\"\n[1] \"WOS:001272101600001\"\n[1] \"WOS:001272423400001\"\n[1] \"WOS:001234953400009\"\n[1] \"WOS:001272816500001\"\n[1] \"WOS:001272815000001\"\n[1] \"WOS:001272814700001\"\n[1] \"WOS:001272697500013\"\n[1] \"WOS:001271832100001\"\n[1] \"WOS:001272816000001\"\n[1] \"WOS:001273099300001\"\n[1] \"WOS:001256619700278\"\n[1] \"WOS:001273057900001\"\n[1] \"WOS:001272122700001\"\n[1] \"WOS:001272545000001\"\n[1] \"WOS:001271887300006\"\n[1] \"WOS:001241648000004\"\n[1] \"WOS:001272187000001\"\n[1] \"WOS:001272816100001\"\n[1] \"WOS:001272815",
        "100001\"\n[1] \"WOS:001272756600006\"\n[1] \"WOS:001272421900001\"\n[1] \"WOS:001272946200001\"\n[1] \"WOS:001272912100001\"\n[1] \"WOS:001272028400009\"\n[1] \"WOS:001272984000001\"\n[1] \"WOS:001273111800001\"\n[1] \"WOS:001272669700001\"\n[1] \"WOS:001272479200001\"\n[1] \"WOS:001272889800001\"\n[1] \"WOS:001272840000003\"\n[1] \"WOS:001264845300052\"\n[1] \"WOS:001264845300065\"\n[1] \"WOS:001253918900005\"\n[1] \"WOS:001253884500036\"\n[1] \"WOS:001272222400001\"\n[1] \"WOS:001272777100001\"\n[1] \"WOS:001270156100001\"\n[1] \"WOS:001271885300001\"\n[1] \"WOS:0",
        "01271796400001\"\n[1] \"WOS:001272256900001\"\n[1] \"WOS:001271890500001\"\n[1] \"WOS:001272099900001\"\n[1] \"WOS:001272301200001\"\n[1] \"WOS:001272290400001\"\n[1] \"WOS:001271848300001\"\n[1] \"WOS:001272032500001\"\n[1] \"WOS:001272169500001\"\n[1] \"WOS:001272295700024\"\n[1] \"WOS:001272158500001\"\n[1] \"WOS:001271712900001\"\n[1] \"WOS:001250972400003\"\n[1] \"WOS:001272723900001\"\n[1] \"WOS:001250102600003\"\n[1] \"WOS:001271551700001\"\n[1] \"WOS:001271312100016\"\n[1] \"WOS:001271246800005\"\n[1] \"WOS:001272060100001\"\n[1] \"WOS:001271284100004\"\n[1",
        "] \"WOS:001271918700001\"\n[1] \"WOS:001265199000036\"\n[1] \"WOS:001226680300016\"\n[1] \"WOS:001271578300002\"\n[1] \"WOS:001272372800004\"\n[1] \"WOS:001271516100001\"\n[1] \"WOS:001271629000001\"\n[1] \"WOS:001271944300003\"\n[1] \"WOS:001271299500001\"\n[1] \"WOS:001271303100001\"\n[1] \"WOS:001272244700001\"\n[1] \"WOS:001271828100001\"\n[1] \"WOS:001268265400001\"\n[1] \"WOS:001271428900009\"\n[1] \"WOS:001271939500001\"\n[1] \"WOS:001196800603007\"\n[1] \"WOS:001272600500001\"\n[1] \"WOS:001272266100001\"\n[1] \"WOS:001271353200001\"\n[1] \"WOS:00127222510",
        "0001\"\n[1] \"WOS:001270390400035\"\n[1] \"WOS:001270390400001\"\n[1] \"WOS:001270390400091\"\n[1] \"WOS:001270390400003\"\n[1] \"WOS:001268499100001\"\n[1] \"WOS:001270230700001\"\n[1] \"WOS:001269601900001\"\n[1] \"WOS:001243933100063\"\n[1] \"WOS:001263223100010\"\n[1] \"WOS:001267270000001\"\n[1] \"WOS:001270672000001\"\n[1] \"WOS:001270782900001\"\n[1] \"WOS:001265226600027\"\n[1] \"WOS:001271186000001\"\n[1] \"WOS:001271719500001\"\n[1] \"WOS:001271182100001\"\n[1] \"WOS:001266670000005\"\n[1] \"WOS:001271185200001\"\n[1] \"WOS:001271399400001\"\n[1] \"WOS:001",
        "270990500001\"\n[1] \"WOS:001270539400003\"\n",
        "> ",
        "> ",
        "output <- paste(output, \"EF\", sep = \"\")",
        "> ",
        "writeLines(output, \"file1.txt\")",
        "> ",
        "convert2df(\"file1.txt\")",
        "\nConverting your wos collection into a bibliographic dataframe\n\n\rindexing file1.txt [============================================================================] 11.54GB/s, eta:  0s\r                                                                                                                     \r",
        "Error in rep(1:nP, rowPapers) : invalid 'times' argument\n",
        "> ",
        "output <- \"FN Clarivate Analytics Web of Science\\nVR 1.0\\n\"",
        "> ",
        "> ",
        "for(i in rownames(initial_json$Data$Records$records$REC)) {",
        "+ ",
        "  record <- initial_json$Data$Records$records$REC[i, ]",
        "+ ",
        "  print(record$UID)",
        "+ ",
        "  output <- paste(output, \"AU \", fetch_author_names(record$static_data$summary$names$name[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TI \", fetch_doc_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SO \", fetch_source_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"JI \", fetch_source_abbreviation(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DT \", record$static_data$summary$doctypes$doctype[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DE \", fetch_keywords(record$static_data$fullrecord_metadata$keywords$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ID \", fetch_keywords(record$static_data$item$keywords_plus$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TC \", fetch_times_cited(record$dynamic_data$citation_related$tc_list$silo_tc[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"UT \", gsub('WOS:', 'ISI', record$UID), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DB WOS\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ER\\n\\n\", sep = \"\")",
        "+ ",
        "}",
        "[1] \"WOS:001272756600008\"\n[1] \"WOS:001272101600001\"\n[1] \"WOS:001272423400001\"\n[1] \"WOS:001234953400009\"\n[1] \"WOS:001272816500001\"\n[1] \"WOS:001272815000001\"\n[1] \"WOS:001272814700001\"\n[1] \"WOS:001272697500013\"\n[1] \"WOS:001271832100001\"\n[1] \"WOS:001272816000001\"\n[1] \"WOS:001273099300001\"\n[1] \"WOS:001256619700278\"\n[1] \"WOS:001273057900001\"\n[1] \"WOS:001272122700001\"\n[1] \"WOS:001272545000001\"\n[1] \"WOS:001271887300006\"\n[1] \"WOS:001241648000004\"\n[1] \"WOS:001272187000001\"\n[1] \"WOS:001272816100001\"\n[1] \"WOS:001272815",
        "100001\"\n[1] \"WOS:001272756600006\"\n[1] \"WOS:001272421900001\"\n[1] \"WOS:001272946200001\"\n[1] \"WOS:001272912100001\"\n[1] \"WOS:001272028400009\"\n[1] \"WOS:001272984000001\"\n[1] \"WOS:001273111800001\"\n[1] \"WOS:001272669700001\"\n[1] \"WOS:001272479200001\"\n[1] \"WOS:001272889800001\"\n[1] \"WOS:001272840000003\"\n[1] \"WOS:001264845300052\"\n[1] \"WOS:001264845300065\"\n[1] \"WOS:001253918900005\"\n[1] \"WOS:001253884500036\"\n[1] \"WOS:001272222400001\"\n[1] \"WOS:001272777100001\"\n[1] \"WOS:001270156100001\"\n[1] \"WOS:001271885300001\"\n[1] \"WOS:0",
        "01271796400001\"\n[1] \"WOS:001272256900001\"\n[1] \"WOS:001271890500001\"\n[1] \"WOS:001272099900001\"\n[1] \"WOS:001272301200001\"\n[1] \"WOS:001272290400001\"\n[1] \"WOS:001271848300001\"\n[1] \"WOS:001272032500001\"\n[1] \"WOS:001272169500001\"\n[1] \"WOS:001272295700024\"\n[1] \"WOS:001272158500001\"\n[1] \"WOS:001271712900001\"\n[1] \"WOS:001250972400003\"\n[1] \"WOS:001272723900001\"\n[1] \"WOS:001250102600003\"\n[1] \"WOS:001271551700001\"\n[1] \"WOS:001271312100016\"\n[1] \"WOS:001271246800005\"\n[1] \"WOS:001272060100001\"\n[1] \"WOS:001271284100004\"\n[1",
        "] \"WOS:001271918700001\"\n[1] \"WOS:001265199000036\"\n[1] \"WOS:001226680300016\"\n[1] \"WOS:001271578300002\"\n[1] \"WOS:001272372800004\"\n[1] \"WOS:001271516100001\"\n[1] \"WOS:001271629000001\"\n[1] \"WOS:001271944300003\"\n[1] \"WOS:001271299500001\"\n[1] \"WOS:001271303100001\"\n[1] \"WOS:001272244700001\"\n[1] \"WOS:001271828100001\"\n[1] \"WOS:001268265400001\"\n[1] \"WOS:001271428900009\"\n[1] \"WOS:001271939500001\"\n[1] \"WOS:001196800603007\"\n[1] \"WOS:001272600500001\"\n[1] \"WOS:001272266100001\"\n[1] \"WOS:001271353200001\"\n[1] \"WOS:00127222510",
        "0001\"\n[1] \"WOS:001270390400035\"\n[1] \"WOS:001270390400001\"\n[1] \"WOS:001270390400091\"\n[1] \"WOS:001270390400003\"\n[1] \"WOS:001268499100001\"\n[1] \"WOS:001270230700001\"\n[1] \"WOS:001269601900001\"\n[1] \"WOS:001243933100063\"\n[1] \"WOS:001263223100010\"\n[1] \"WOS:001267270000001\"\n[1] \"WOS:001270672000001\"\n[1] \"WOS:001270782900001\"\n[1] \"WOS:001265226600027\"\n[1] \"WOS:001271186000001\"\n[1] \"WOS:001271719500001\"\n[1] \"WOS:001271182100001\"\n[1] \"WOS:001266670000005\"\n[1] \"WOS:001271185200001\"\n[1] \"WOS:001271399400001\"\n[1] \"WOS:001",
        "270990500001\"\n[1] \"WOS:001270539400003\"\n",
        "> ",
        "> ",
        "output <- paste(output, \"EF\", sep = \"\")",
        "> ",
        "writeLines(output, \"file1.txt\")",
        "> ",
        "convert2df(\"file1.txt\")",
        "\nConverting your wos collection into a bibliographic dataframe\n\n\rindexing file1.txt [=============================================================================] 9.35GB/s, eta:  0s\r                                                                                                                     \r",
        "Error in rep(1:nP, rowPapers) : invalid 'times' argument\n",
        "> ",
        "output <- \"FN Clarivate Analytics Web of Science\\nVR 1.0\\n\"",
        "> ",
        "> ",
        "for(i in rownames(initial_json$Data$Records$records$REC)) {",
        "+ ",
        "  record <- initial_json$Data$Records$records$REC[i, ]",
        "+ ",
        "  print(record$UID)",
        "+ ",
        "  output <- paste(output, \"AU \", fetch_author_names(record$static_data$summary$names$name[[1]]), \"\\n   \", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TI \", fetch_doc_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SO \", fetch_source_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"JI \", fetch_source_abbreviation(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DT \", record$static_data$summary$doctypes$doctype[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DE \", fetch_keywords(record$static_data$fullrecord_metadata$keywords$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ID \", fetch_keywords(record$static_data$item$keywords_plus$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TC \", fetch_times_cited(record$dynamic_data$citation_related$tc_list$silo_tc[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"UT \", gsub('WOS:', 'ISI', record$UID), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DB WOS\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ER\\n\\n\", sep = \"\")",
        "+ ",
        "}",
        "[1] \"WOS:001272756600008\"\n[1] \"WOS:001272101600001\"\n[1] \"WOS:001272423400001\"\n[1] \"WOS:001234953400009\"\n[1] \"WOS:001272816500001\"\n[1] \"WOS:001272815000001\"\n[1] \"WOS:001272814700001\"\n[1] \"WOS:001272697500013\"\n[1] \"WOS:001271832100001\"\n[1] \"WOS:001272816000001\"\n[1] \"WOS:001273099300001\"\n[1] \"WOS:001256619700278\"\n[1] \"WOS:001273057900001\"\n[1] \"WOS:001272122700001\"\n[1] \"WOS:001272545000001\"\n[1] \"WOS:001271887300006\"\n[1] \"WOS:001241648000004\"\n[1] \"WOS:001272187000001\"\n[1] \"WOS:001272816100001\"\n[1] \"WOS:001272815",
        "100001\"\n[1] \"WOS:001272756600006\"\n[1] \"WOS:001272421900001\"\n[1] \"WOS:001272946200001\"\n[1] \"WOS:001272912100001\"\n[1] \"WOS:001272028400009\"\n[1] \"WOS:001272984000001\"\n[1] \"WOS:001273111800001\"\n[1] \"WOS:001272669700001\"\n[1] \"WOS:001272479200001\"\n[1] \"WOS:001272889800001\"\n[1] \"WOS:001272840000003\"\n[1] \"WOS:001264845300052\"\n[1] \"WOS:001264845300065\"\n[1] \"WOS:001253918900005\"\n[1] \"WOS:001253884500036\"\n[1] \"WOS:001272222400001\"\n[1] \"WOS:001272777100001\"\n[1] \"WOS:001270156100001\"\n[1] \"WOS:001271885300001\"\n[1] \"WOS:0",
        "01271796400001\"\n[1] \"WOS:001272256900001\"\n[1] \"WOS:001271890500001\"\n[1] \"WOS:001272099900001\"\n[1] \"WOS:001272301200001\"\n[1] \"WOS:001272290400001\"\n[1] \"WOS:001271848300001\"\n[1] \"WOS:001272032500001\"\n[1] \"WOS:001272169500001\"\n[1] \"WOS:001272295700024\"\n[1] \"WOS:001272158500001\"\n[1] \"WOS:001271712900001\"\n[1] \"WOS:001250972400003\"\n[1] \"WOS:001272723900001\"\n[1] \"WOS:001250102600003\"\n[1] \"WOS:001271551700001\"\n[1] \"WOS:001271312100016\"\n[1] \"WOS:001271246800005\"\n[1] \"WOS:001272060100001\"\n[1] \"WOS:001271284100004\"\n[1",
        "] \"WOS:001271918700001\"\n[1] \"WOS:001265199000036\"\n[1] \"WOS:001226680300016\"\n[1] \"WOS:001271578300002\"\n[1] \"WOS:001272372800004\"\n[1] \"WOS:001271516100001\"\n[1] \"WOS:001271629000001\"\n[1] \"WOS:001271944300003\"\n[1] \"WOS:001271299500001\"\n[1] \"WOS:001271303100001\"\n[1] \"WOS:001272244700001\"\n[1] \"WOS:001271828100001\"\n[1] \"WOS:001268265400001\"\n[1] \"WOS:001271428900009\"\n[1] \"WOS:001271939500001\"\n[1] \"WOS:001196800603007\"\n[1] \"WOS:001272600500001\"\n[1] \"WOS:001272266100001\"\n[1] \"WOS:001271353200001\"\n[1] \"WOS:00127222510",
        "0001\"\n[1] \"WOS:001270390400035\"\n[1] \"WOS:001270390400001\"\n[1] \"WOS:001270390400091\"\n[1] \"WOS:001270390400003\"\n[1] \"WOS:001268499100001\"\n[1] \"WOS:001270230700001\"\n[1] \"WOS:001269601900001\"\n[1] \"WOS:001243933100063\"\n[1] \"WOS:001263223100010\"\n[1] \"WOS:001267270000001\"\n[1] \"WOS:001270672000001\"\n[1] \"WOS:001270782900001\"\n[1] \"WOS:001265226600027\"\n[1] \"WOS:001271186000001\"\n[1] \"WOS:001271719500001\"\n[1] \"WOS:001271182100001\"\n[1] \"WOS:001266670000005\"\n[1] \"WOS:001271185200001\"\n[1] \"WOS:001271399400001\"\n[1] \"WOS:001",
        "270990500001\"\n[1] \"WOS:001270539400003\"\n",
        "> ",
        "> ",
        "output <- paste(output, \"EF\", sep = \"\")",
        "> ",
        "writeLines(output, \"file1.txt\")",
        "> ",
        "convert2df(\"file1.txt\")",
        "\nConverting your wos collection into a bibliographic dataframe\n\n\rindexing file1.txt [=============================================================================] 8.59GB/s, eta:  0s\r                                                                                                                     \r",
        "Error in rep(1:nP, rowPapers) : invalid 'times' argument\n",
        "> ",
        "# Functions to process the JSON data into a tab-delimited file",
        "> ",
        "fetch_author_names <- function(x) {",
        "+ ",
        "  if(is.null(nrow(x))) {",
        "+ ",
        "    return(x$full_name)",
        "+ ",
        "  } else {",
        "+ ",
        "  return(paste(x[, \"full_name\"], collapse = \"\\n   \"))",
        "+ ",
        "  }",
        "+ ",
        "}",
        "> ",
        "output <- \"FN Clarivate Analytics Web of Science\\nVR 1.0\\n\"",
        "> ",
        "> ",
        "for(i in rownames(initial_json$Data$Records$records$REC)) {",
        "+ ",
        "  record <- initial_json$Data$Records$records$REC[i, ]",
        "+ ",
        "  print(record$UID)",
        "+ ",
        "  output <- paste(output, \"AU \", fetch_author_names(record$static_data$summary$names$name[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TI \", fetch_doc_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SO \", fetch_source_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"JI \", fetch_source_abbreviation(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DT \", record$static_data$summary$doctypes$doctype[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DE \", fetch_keywords(record$static_data$fullrecord_metadata$keywords$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ID \", fetch_keywords(record$static_data$item$keywords_plus$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TC \", fetch_times_cited(record$dynamic_data$citation_related$tc_list$silo_tc[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"UT \", gsub('WOS:', 'ISI', record$UID), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DB WOS\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ER\\n\\n\", sep = \"\")",
        "+ ",
        "}",
        "[1] \"WOS:001272756600008\"\n[1] \"WOS:001272101600001\"\n[1] \"WOS:001272423400001\"\n[1] \"WOS:001234953400009\"\n[1] \"WOS:001272816500001\"\n[1] \"WOS:001272815000001\"\n[1] \"WOS:001272814700001\"\n[1] \"WOS:001272697500013\"\n[1] \"WOS:001271832100001\"\n[1] \"WOS:001272816000001\"\n[1] \"WOS:001273099300001\"\n[1] \"WOS:001256619700278\"\n[1] \"WOS:001273057900001\"\n[1] \"WOS:001272122700001\"\n[1] \"WOS:001272545000001\"\n[1] \"WOS:001271887300006\"\n[1] \"WOS:001241648000004\"\n[1] \"WOS:001272187000001\"\n[1] \"WOS:001272816100001\"\n[1] \"WOS:001272815",
        "100001\"\n[1] \"WOS:001272756600006\"\n[1] \"WOS:001272421900001\"\n[1] \"WOS:001272946200001\"\n[1] \"WOS:001272912100001\"\n[1] \"WOS:001272028400009\"\n[1] \"WOS:001272984000001\"\n[1] \"WOS:001273111800001\"\n[1] \"WOS:001272669700001\"\n[1] \"WOS:001272479200001\"\n[1] \"WOS:001272889800001\"\n[1] \"WOS:001272840000003\"\n[1] \"WOS:001264845300052\"\n[1] \"WOS:001264845300065\"\n[1] \"WOS:001253918900005\"\n[1] \"WOS:001253884500036\"\n[1] \"WOS:001272222400001\"\n[1] \"WOS:001272777100001\"\n[1] \"WOS:001270156100001\"\n[1] \"WOS:001271885300001\"\n[1] \"WOS:0",
        "01271796400001\"\n[1] \"WOS:001272256900001\"\n[1] \"WOS:001271890500001\"\n[1] \"WOS:001272099900001\"\n[1] \"WOS:001272301200001\"\n[1] \"WOS:001272290400001\"\n[1] \"WOS:001271848300001\"\n[1] \"WOS:001272032500001\"\n[1] \"WOS:001272169500001\"\n[1] \"WOS:001272295700024\"\n[1] \"WOS:001272158500001\"\n[1] \"WOS:001271712900001\"\n[1] \"WOS:001250972400003\"\n[1] \"WOS:001272723900001\"\n[1] \"WOS:001250102600003\"\n[1] \"WOS:001271551700001\"\n[1] \"WOS:001271312100016\"\n[1] \"WOS:001271246800005\"\n[1] \"WOS:001272060100001\"\n[1] \"WOS:001271284100004\"\n[1",
        "] \"WOS:001271918700001\"\n[1] \"WOS:001265199000036\"\n[1] \"WOS:001226680300016\"\n[1] \"WOS:001271578300002\"\n[1] \"WOS:001272372800004\"\n[1] \"WOS:001271516100001\"\n[1] \"WOS:001271629000001\"\n[1] \"WOS:001271944300003\"\n[1] \"WOS:001271299500001\"\n[1] \"WOS:001271303100001\"\n[1] \"WOS:001272244700001\"\n[1] \"WOS:001271828100001\"\n[1] \"WOS:001268265400001\"\n[1] \"WOS:001271428900009\"\n[1] \"WOS:001271939500001\"\n[1] \"WOS:001196800603007\"\n[1] \"WOS:001272600500001\"\n[1] \"WOS:001272266100001\"\n[1] \"WOS:001271353200001\"\n[1] \"WOS:00127222510",
        "0001\"\n[1] \"WOS:001270390400035\"\n[1] \"WOS:001270390400001\"\n[1] \"WOS:001270390400091\"\n[1] \"WOS:001270390400003\"\n[1] \"WOS:001268499100001\"\n[1] \"WOS:001270230700001\"\n[1] \"WOS:001269601900001\"\n[1] \"WOS:001243933100063\"\n[1] \"WOS:001263223100010\"\n[1] \"WOS:001267270000001\"\n[1] \"WOS:001270672000001\"\n[1] \"WOS:001270782900001\"\n[1] \"WOS:001265226600027\"\n[1] \"WOS:001271186000001\"\n[1] \"WOS:001271719500001\"\n[1] \"WOS:001271182100001\"\n[1] \"WOS:001266670000005\"\n[1] \"WOS:001271185200001\"\n[1] \"WOS:001271399400001\"\n[1] \"WOS:001",
        "270990500001\"\n[1] \"WOS:001270539400003\"\n",
        "> ",
        "> ",
        "output <- paste(output, \"EF\", sep = \"\")",
        "> ",
        "writeLines(output, \"file1.txt\")",
        "> ",
        "convert2df(\"file1.txt\")",
        "\nConverting your wos collection into a bibliographic dataframe\n\n\rindexing file1.txt [=============================================================================] 8.49GB/s, eta:  0s\r                                                                                                                     \r",
        "Error in rep(1:nP, rowPapers) : invalid 'times' argument\n",
        "> ",
        "convert2df(\"file1.txt\")",
        "\nConverting your wos collection into a bibliographic dataframe\n\n\rindexing file1.txt [============================================================================] 81.69MB/s, eta:  0s\r                                                                                                                     \r",
        "Error in rep(1:nP, rowPapers) : invalid 'times' argument\n",
        "> ",
        "biblioshiny()",
        "\nListening on http://127.0.0.1:4478\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [===============================================================================] 107.22MB/s, eta:  0s\r                                                                                                                     \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n",
        "> ",
        "biblioshiny()",
        "\nListening on http://127.0.0.1:4478\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [================================================================================] 81.69MB/s, eta:  0s\r                                                                                                                     \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexed 0B in  0s, 0B/s\rindexed 1.00TB in  0s, 3.28PB/s\r                                                                                                                   \r\nWarning:\nIn your file, some mandatory metadata are missing. Bibliometrix functions may not work properly!\n\nPlease, take a look at the vignettes:\n- 'Data Importing and Converting' (https://www.bibliometrix.org/vignettes/Data-Importing-and-Converting.html)\n- 'A brief introduc",
        "tion to bibliometrix' (https://www.bibliometrix.org/vignettes/Introduction_to_bibliometrix.html)\n\n\nMissing fields:  CR \nDone!\n\n\nGenerating affiliation field tag AU_UN from C1:  Done!\n\n\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [===============================================================================] 831.21MB/s, eta:  0s\r                                                                                                                     \r\nWarning:\nIn your file, som",
        "e mandatory metadata are missing. Bibliometrix functions may not work properly!\n\nPlease, take a look at the vignettes:\n- 'Data Importing and Converting' (https://www.bibliometrix.org/vignettes/Data-Importing-and-Converting.html)\n- 'A brief introduction to bibliometrix' (https://www.bibliometrix.org/vignettes/Introduction_to_bibliometrix.html)\n\n\nMissing fields:  CR \nDone!\n\n\nGenerating affiliation field tag AU_UN from C1:  Done!\n\n\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt ",
        "[===============================================================================] 148.14MB/s, eta:  0s\r                                                                                                                     \r\nWarning:\nIn your file, some mandatory metadata are missing. Bibliometrix functions may not work properly!\n\nPlease, take a look at the vignettes:\n- 'Data Importing and Converting' (https://www.bibliometrix.org/vignettes/Data-Importing-and-Converting.html)\n- 'A brief introduction to bibliome",
        "trix' (https://www.bibliometrix.org/vignettes/Introduction_to_bibliometrix.html)\n\n\nMissing fields:  CR \nDone!\n\n\nGenerating affiliation field tag AU_UN from C1:  Done!\n\n\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [===============================================================================] 150.99MB/s, eta:  0s\r                                                                                                                     \r\nWarning:\nIn your file, some mandatory meta",
        "data are missing. Bibliometrix functions may not work properly!\n\nPlease, take a look at the vignettes:\n- 'Data Importing and Converting' (https://www.bibliometrix.org/vignettes/Data-Importing-and-Converting.html)\n- 'A brief introduction to bibliometrix' (https://www.bibliometrix.org/vignettes/Introduction_to_bibliometrix.html)\n\n\nMissing fields:  C1 CR \n",
        "Warning: Error in $<-.data.frame: replacement has 0 rows, data has 1\n  158: \u001B[37mstop\u001B[39m\n  157: \u001B[37m$<-.data.frame\u001B[39m\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nh",
        "tmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderFunc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [===============================================================================] 123.03MB/s, eta:  0s\r                                                                                                                     \r\nWarning:\nIn your file, some mandatory metadata are missing. Bibliometrix functions may not work properly!\n\nPlease, take a look at the vignettes:\n- 'Data Importing and Converting' (https://www.bibliometrix.org/v",
        "ignettes/Data-Importing-and-Converting.html)\n- 'A brief introduction to bibliometrix' (https://www.bibliometrix.org/vignettes/Introduction_to_bibliometrix.html)\n\n\nMissing fields:  CR \nDone!\n\n\nGenerating affiliation field tag AU_UN from C1:  Done!\n\n",
        "\n",
        "> ",
        "output <- \"FN Clarivate Analytics Web of Science\\nVR 1.0\\n\"",
        "> ",
        "> ",
        "for(i in rownames(initial_json$Data$Records$records$REC)) {",
        "+ ",
        "  record <- initial_json$Data$Records$records$REC[i, ]",
        "+ ",
        "  print(record$UID)",
        "+ ",
        "  output <- paste(output, \"AU \", fetch_author_names(record$static_data$summary$names$name[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TI \", fetch_doc_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SO \", fetch_source_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"JI \", fetch_source_abbreviation(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DT \", record$static_data$summary$doctypes$doctype[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DE \", fetch_keywords(record$static_data$fullrecord_metadata$keywords$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ID \", fetch_keywords(record$static_data$item$keywords_plus$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"AB \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"C1 \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TC \", fetch_times_cited(record$dynamic_data$citation_related$tc_list$silo_tc[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"UT \", gsub('WOS:', 'ISI', record$UID), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DB WOS\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ER\\n\\n\", sep = \"\")",
        "+ ",
        "}",
        "[1] \"WOS:001272756600008\"\n[1] \"WOS:001272101600001\"\n[1] \"WOS:001272423400001\"\n[1] \"WOS:001234953400009\"\n[1] \"WOS:001272816500001\"\n[1] \"WOS:001272815000001\"\n[1] \"WOS:001272814700001\"\n[1] \"WOS:001272697500013\"\n[1] \"WOS:001271832100001\"\n[1] \"WOS:001272816000001\"\n[1] \"WOS:001273099300001\"\n[1] \"WOS:001256619700278\"\n[1] \"WOS:001273057900001\"\n[1] \"WOS:001272122700001\"\n[1] \"WOS:001272545000001\"\n[1] \"WOS:001271887300006\"\n[1] \"WOS:001241648000004\"\n[1] \"WOS:001272187000001\"\n[1] \"WOS:001272816100001\"\n[1] \"WOS:001272815",
        "100001\"\n[1] \"WOS:001272756600006\"\n[1] \"WOS:001272421900001\"\n[1] \"WOS:001272946200001\"\n[1] \"WOS:001272912100001\"\n[1] \"WOS:001272028400009\"\n[1] \"WOS:001272984000001\"\n[1] \"WOS:001273111800001\"\n[1] \"WOS:001272669700001\"\n[1] \"WOS:001272479200001\"\n[1] \"WOS:001272889800001\"\n[1] \"WOS:001272840000003\"\n[1] \"WOS:001264845300052\"\n[1] \"WOS:001264845300065\"\n[1] \"WOS:001253918900005\"\n[1] \"WOS:001253884500036\"\n[1] \"WOS:001272222400001\"\n[1] \"WOS:001272777100001\"\n[1] \"WOS:001270156100001\"\n[1] \"WOS:001271885300001\"\n[1] \"WOS:0",
        "01271796400001\"\n[1] \"WOS:001272256900001\"\n[1] \"WOS:001271890500001\"\n[1] \"WOS:001272099900001\"\n[1] \"WOS:001272301200001\"\n[1] \"WOS:001272290400001\"\n[1] \"WOS:001271848300001\"\n[1] \"WOS:001272032500001\"\n[1] \"WOS:001272169500001\"\n[1] \"WOS:001272295700024\"\n[1] \"WOS:001272158500001\"\n[1] \"WOS:001271712900001\"\n[1] \"WOS:001250972400003\"\n[1] \"WOS:001272723900001\"\n[1] \"WOS:001250102600003\"\n[1] \"WOS:001271551700001\"\n[1] \"WOS:001271312100016\"\n[1] \"WOS:001271246800005\"\n[1] \"WOS:001272060100001\"\n[1] \"WOS:001271284100004\"\n[1",
        "] \"WOS:001271918700001\"\n[1] \"WOS:001265199000036\"\n[1] \"WOS:001226680300016\"\n[1] \"WOS:001271578300002\"\n[1] \"WOS:001272372800004\"\n[1] \"WOS:001271516100001\"\n[1] \"WOS:001271629000001\"\n[1] \"WOS:001271944300003\"\n[1] \"WOS:001271299500001\"\n[1] \"WOS:001271303100001\"\n[1] \"WOS:001272244700001\"\n[1] \"WOS:001271828100001\"\n[1] \"WOS:001268265400001\"\n[1] \"WOS:001271428900009\"\n[1] \"WOS:001271939500001\"\n[1] \"WOS:001196800603007\"\n[1] \"WOS:001272600500001\"\n[1] \"WOS:001272266100001\"\n[1] \"WOS:001271353200001\"\n[1] \"WOS:00127222510",
        "0001\"\n[1] \"WOS:001270390400035\"\n[1] \"WOS:001270390400001\"\n[1] \"WOS:001270390400091\"\n[1] \"WOS:001270390400003\"\n[1] \"WOS:001268499100001\"\n[1] \"WOS:001270230700001\"\n[1] \"WOS:001269601900001\"\n[1] \"WOS:001243933100063\"\n[1] \"WOS:001263223100010\"\n[1] \"WOS:001267270000001\"\n[1] \"WOS:001270672000001\"\n[1] \"WOS:001270782900001\"\n[1] \"WOS:001265226600027\"\n[1] \"WOS:001271186000001\"\n[1] \"WOS:001271719500001\"\n[1] \"WOS:001271182100001\"\n[1] \"WOS:001266670000005\"\n[1] \"WOS:001271185200001\"\n[1] \"WOS:001271399400001\"\n[1] \"WOS:001",
        "270990500001\"\n[1] \"WOS:001270539400003\"\n",
        "> ",
        "> ",
        "output <- paste(output, \"EF\", sep = \"\")",
        "> ",
        "writeLines(output, \"file1.txt\")",
        "> ",
        "biblioshiny()",
        "\nListening on http://127.0.0.1:4478\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [================================================================================] 16.23GB/s, eta:  0s\r                                                                                                                     \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n\n",
        "> ",
        "output <- \"FN Clarivate Analytics Web of Science\\nVR 1.0\\n\"",
        "> ",
        "> ",
        "for(i in rownames(initial_json$Data$Records$records$REC)) {",
        "+ ",
        "  record <- initial_json$Data$Records$records$REC[i, ]",
        "+ ",
        "  print(record$UID)",
        "+ ",
        "  output <- paste(output, \"AU \", fetch_author_names(record$static_data$summary$names$name[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TI \", fetch_doc_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SO \", fetch_source_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"JI \", fetch_source_abbreviation(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DT \", record$static_data$summary$doctypes$doctype[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DE \", fetch_keywords(record$static_data$fullrecord_metadata$keywords$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ID \", fetch_keywords(record$static_data$item$keywords_plus$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"AB \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"C1 \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"RP \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"PY \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SC \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TC \", fetch_times_cited(record$dynamic_data$citation_related$tc_list$silo_tc[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"UT \", gsub('WOS:', 'ISI', record$UID), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DB WOS\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ER\\n\\n\", sep = \"\")",
        "+ ",
        "}",
        "[1] \"WOS:001272756600008\"\n[1] \"WOS:001272101600001\"\n[1] \"WOS:001272423400001\"\n[1] \"WOS:001234953400009\"\n[1] \"WOS:001272816500001\"\n[1] \"WOS:001272815000001\"\n[1] \"WOS:001272814700001\"\n[1] \"WOS:001272697500013\"\n[1] \"WOS:001271832100001\"\n[1] \"WOS:001272816000001\"\n[1] \"WOS:001273099300001\"\n[1] \"WOS:001256619700278\"\n[1] \"WOS:001273057900001\"\n[1] \"WOS:001272122700001\"\n[1] \"WOS:001272545000001\"\n[1] \"WOS:001271887300006\"\n[1] \"WOS:001241648000004\"\n[1] \"WOS:001272187000001\"\n[1] \"WOS:001272816100001\"\n[1] \"WOS:001272815",
        "100001\"\n[1] \"WOS:001272756600006\"\n[1] \"WOS:001272421900001\"\n[1] \"WOS:001272946200001\"\n[1] \"WOS:001272912100001\"\n[1] \"WOS:001272028400009\"\n[1] \"WOS:001272984000001\"\n[1] \"WOS:001273111800001\"\n[1] \"WOS:001272669700001\"\n[1] \"WOS:001272479200001\"\n[1] \"WOS:001272889800001\"\n[1] \"WOS:001272840000003\"\n[1] \"WOS:001264845300052\"\n[1] \"WOS:001264845300065\"\n[1] \"WOS:001253918900005\"\n[1] \"WOS:001253884500036\"\n[1] \"WOS:001272222400001\"\n[1] \"WOS:001272777100001\"\n[1] \"WOS:001270156100001\"\n[1] \"WOS:001271885300001\"\n[1] \"WOS:0",
        "01271796400001\"\n[1] \"WOS:001272256900001\"\n[1] \"WOS:001271890500001\"\n[1] \"WOS:001272099900001\"\n[1] \"WOS:001272301200001\"\n[1] \"WOS:001272290400001\"\n[1] \"WOS:001271848300001\"\n[1] \"WOS:001272032500001\"\n[1] \"WOS:001272169500001\"\n[1] \"WOS:001272295700024\"\n[1] \"WOS:001272158500001\"\n[1] \"WOS:001271712900001\"\n[1] \"WOS:001250972400003\"\n[1] \"WOS:001272723900001\"\n[1] \"WOS:001250102600003\"\n[1] \"WOS:001271551700001\"\n[1] \"WOS:001271312100016\"\n[1] \"WOS:001271246800005\"\n[1] \"WOS:001272060100001\"\n[1] \"WOS:001271284100004\"\n[1",
        "] \"WOS:001271918700001\"\n[1] \"WOS:001265199000036\"\n[1] \"WOS:001226680300016\"\n[1] \"WOS:001271578300002\"\n[1] \"WOS:001272372800004\"\n[1] \"WOS:001271516100001\"\n[1] \"WOS:001271629000001\"\n[1] \"WOS:001271944300003\"\n[1] \"WOS:001271299500001\"\n[1] \"WOS:001271303100001\"\n[1] \"WOS:001272244700001\"\n[1] \"WOS:001271828100001\"\n[1] \"WOS:001268265400001\"\n[1] \"WOS:001271428900009\"\n[1] \"WOS:001271939500001\"\n[1] \"WOS:001196800603007\"\n[1] \"WOS:001272600500001\"\n[1] \"WOS:001272266100001\"\n[1] \"WOS:001271353200001\"\n[1] \"WOS:00127222510",
        "0001\"\n[1] \"WOS:001270390400035\"\n[1] \"WOS:001270390400001\"\n[1] \"WOS:001270390400091\"\n[1] \"WOS:001270390400003\"\n[1] \"WOS:001268499100001\"\n[1] \"WOS:001270230700001\"\n[1] \"WOS:001269601900001\"\n[1] \"WOS:001243933100063\"\n[1] \"WOS:001263223100010\"\n[1] \"WOS:001267270000001\"\n[1] \"WOS:001270672000001\"\n[1] \"WOS:001270782900001\"\n[1] \"WOS:001265226600027\"\n[1] \"WOS:001271186000001\"\n[1] \"WOS:001271719500001\"\n[1] \"WOS:001271182100001\"\n[1] \"WOS:001266670000005\"\n[1] \"WOS:001271185200001\"\n[1] \"WOS:001271399400001\"\n[1] \"WOS:001",
        "270990500001\"\n[1] \"WOS:001270539400003\"\n",
        "> ",
        "> ",
        "output <- paste(output, \"EF\", sep = \"\")",
        "> ",
        "writeLines(output, \"file1.txt\")",
        "> ",
        "  row <- x[x$coll_id == 'WOS', ]",
        "Error: object 'x' not found\n",
        "> ",
        "biblioshiny()",
        "\nListening on http://127.0.0.1:4478\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [================================================================================] 20.80GB/s, eta:  0s\r                                                                                                                     \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexed 0B in  0s, 0B/s\rindexed 1.00TB in  0s, 3.79PB/s\r                                                                                                                   \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexed 0B in  0s, 0B/s\rindexed 1.00TB in  0s, 4.18PB/s\r                                                                                                                   \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexed 0B in  0s, 0B/s\rindexed 1.00TB in  0s, 2.42PB/s\r                                                                                                                   \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexed 0B in  0s, 0B/s\rindexed 1.00TB in  0s, 3.74PB/s\r                                                                                                                   \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexed 0B in  0s, 0B/s\rindexed 1.00TB in  0s, 4.29PB/s\r                                                                                                                   \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexed 0B in  0s, 0B/s\rindexed 1.00TB in  0s, 4.05PB/s\r                                                                                                                   \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexed 0B in  0s, 0B/s\rindexed 1.00TB in  0s, 3.38PB/s\r                                                                                                                   \r\nWarning:\nIn your file, some mandatory metadata are missing. Bibliometrix functions may not work properly!\n\nPlease, take a look at the vignettes:\n- 'Data Importing and Converting' (https://www.bibliometrix.org/vignettes/Data-Importing-and-Converting.html)\n- 'A brief introduc",
        "tion to bibliometrix' (https://www.bibliometrix.org/vignettes/Introduction_to_bibliometrix.html)\n\n\nMissing fields:  CR \nDone!\n\n\nGenerating affiliation field tag AU_UN from C1:  Done!\n\n",
        "\n",
        "> ",
        "output <- \"FN Clarivate Analytics Web of Science\\nVR 1.0\\n\"",
        "> ",
        "> ",
        "for(i in rownames(initial_json$Data$Records$records$REC)) {",
        "+ ",
        "  record <- initial_json$Data$Records$records$REC[i, ]",
        "+ ",
        "  print(record$UID)",
        "+ ",
        "  outpuy <- paste(output, \"PT \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"AU \", fetch_author_names(record$static_data$summary$names$name[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TI \", fetch_doc_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SO \", fetch_source_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"JI \", fetch_source_abbreviation(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DT \", record$static_data$summary$doctypes$doctype[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DE \", fetch_keywords(record$static_data$fullrecord_metadata$keywords$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ID \", fetch_keywords(record$static_data$item$keywords_plus$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"AB \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"C1 \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"RP \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"PY \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SC \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TC \", fetch_times_cited(record$dynamic_data$citation_related$tc_list$silo_tc[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"UT \", gsub('WOS:', 'ISI', record$UID), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DB WOS\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ER\\n\\n\", sep = \"\")",
        "+ ",
        "}",
        "[1] \"WOS:001272756600008\"\n[1] \"WOS:001272101600001\"\n[1] \"WOS:001272423400001\"\n[1] \"WOS:001234953400009\"\n[1] \"WOS:001272816500001\"\n[1] \"WOS:001272815000001\"\n[1] \"WOS:001272814700001\"\n[1] \"WOS:001272697500013\"\n[1] \"WOS:001271832100001\"\n[1] \"WOS:001272816000001\"\n[1] \"WOS:001273099300001\"\n[1] \"WOS:001256619700278\"\n[1] \"WOS:001273057900001\"\n[1] \"WOS:001272122700001\"\n[1] \"WOS:001272545000001\"\n[1] \"WOS:001271887300006\"\n[1] \"WOS:001241648000004\"\n[1] \"WOS:001272187000001\"\n[1] \"WOS:001272816100001\"\n[1] \"WOS:001272815",
        "100001\"\n[1] \"WOS:001272756600006\"\n[1] \"WOS:001272421900001\"\n[1] \"WOS:001272946200001\"\n[1] \"WOS:001272912100001\"\n[1] \"WOS:001272028400009\"\n[1] \"WOS:001272984000001\"\n[1] \"WOS:001273111800001\"\n[1] \"WOS:001272669700001\"\n[1] \"WOS:001272479200001\"\n[1] \"WOS:001272889800001\"\n[1] \"WOS:001272840000003\"\n[1] \"WOS:001264845300052\"\n[1] \"WOS:001264845300065\"\n[1] \"WOS:001253918900005\"\n[1] \"WOS:001253884500036\"\n[1] \"WOS:001272222400001\"\n[1] \"WOS:001272777100001\"\n[1] \"WOS:001270156100001\"\n[1] \"WOS:001271885300001\"\n[1] \"WOS:0",
        "01271796400001\"\n[1] \"WOS:001272256900001\"\n[1] \"WOS:001271890500001\"\n[1] \"WOS:001272099900001\"\n[1] \"WOS:001272301200001\"\n[1] \"WOS:001272290400001\"\n[1] \"WOS:001271848300001\"\n[1] \"WOS:001272032500001\"\n[1] \"WOS:001272169500001\"\n[1] \"WOS:001272295700024\"\n[1] \"WOS:001272158500001\"\n[1] \"WOS:001271712900001\"\n[1] \"WOS:001250972400003\"\n[1] \"WOS:001272723900001\"\n[1] \"WOS:001250102600003\"\n[1] \"WOS:001271551700001\"\n[1] \"WOS:001271312100016\"\n[1] \"WOS:001271246800005\"\n[1] \"WOS:001272060100001\"\n[1] \"WOS:001271284100004\"\n[1",
        "] \"WOS:001271918700001\"\n[1] \"WOS:001265199000036\"\n[1] \"WOS:001226680300016\"\n[1] \"WOS:001271578300002\"\n[1] \"WOS:001272372800004\"\n[1] \"WOS:001271516100001\"\n[1] \"WOS:001271629000001\"\n[1] \"WOS:001271944300003\"\n[1] \"WOS:001271299500001\"\n[1] \"WOS:001271303100001\"\n[1] \"WOS:001272244700001\"\n[1] \"WOS:001271828100001\"\n[1] \"WOS:001268265400001\"\n[1] \"WOS:001271428900009\"\n[1] \"WOS:001271939500001\"\n[1] \"WOS:001196800603007\"\n[1] \"WOS:001272600500001\"\n[1] \"WOS:001272266100001\"\n[1] \"WOS:001271353200001\"\n[1] \"WOS:00127222510",
        "0001\"\n[1] \"WOS:001270390400035\"\n[1] \"WOS:001270390400001\"\n[1] \"WOS:001270390400091\"\n[1] \"WOS:001270390400003\"\n[1] \"WOS:001268499100001\"\n[1] \"WOS:001270230700001\"\n[1] \"WOS:001269601900001\"\n[1] \"WOS:001243933100063\"\n[1] \"WOS:001263223100010\"\n[1] \"WOS:001267270000001\"\n[1] \"WOS:001270672000001\"\n[1] \"WOS:001270782900001\"\n[1] \"WOS:001265226600027\"\n[1] \"WOS:001271186000001\"\n[1] \"WOS:001271719500001\"\n[1] \"WOS:001271182100001\"\n[1] \"WOS:001266670000005\"\n[1] \"WOS:001271185200001\"\n[1] \"WOS:001271399400001\"\n[1] \"WOS:001",
        "270990500001\"\n[1] \"WOS:001270539400003\"\n",
        "> ",
        "> ",
        "output <- paste(output, \"EF\", sep = \"\")",
        "> ",
        "writeLines(output, \"file1.txt\")",
        "> ",
        "biblioshiny()",
        "\nListening on http://127.0.0.1:4478\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [================================================================================] 16.00GB/s, eta:  0s\r                                                                                                                     \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [=================================================================================] 7.56GB/s, eta:  0s\r                                                                                                                     \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n\n",
        "> ",
        "output <- \"FN Clarivate Analytics Web of Science\\nVR 1.0\\n\"",
        "> ",
        "> ",
        "for(i in rownames(initial_json$Data$Records$records$REC)) {",
        "+ ",
        "  record <- initial_json$Data$Records$records$REC[i, ]",
        "+ ",
        "  print(record$UID)",
        "+ ",
        "  outpuy <- paste(output, \"PT \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"AU \", fetch_author_names(record$static_data$summary$names$name[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TI \", fetch_doc_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SO \", fetch_source_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"JI \", fetch_source_abbreviation(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DT \", record$static_data$summary$doctypes$doctype[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DE \", fetch_keywords(record$static_data$fullrecord_metadata$keywords$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ID \", fetch_keywords(record$static_data$item$keywords_plus$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"AB \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"C1 \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"RP \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"PY \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SC \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TC \", fetch_times_cited(record$dynamic_data$citation_related$tc_list$silo_tc[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"UT \", gsub('WOS:', 'ISI', record$UID), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DB WOS\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ER\\n\\n\", sep = \"\")",
        "+ ",
        "}",
        "[1] \"WOS:001272756600008\"\n[1] \"WOS:001272101600001\"\n[1] \"WOS:001272423400001\"\n[1] \"WOS:001234953400009\"\n[1] \"WOS:001272816500001\"\n[1] \"WOS:001272815000001\"\n[1] \"WOS:001272814700001\"\n[1] \"WOS:001272697500013\"\n[1] \"WOS:001271832100001\"\n[1] \"WOS:001272816000001\"\n[1] \"WOS:001273099300001\"\n[1] \"WOS:001256619700278\"\n[1] \"WOS:001273057900001\"\n[1] \"WOS:001272122700001\"\n[1] \"WOS:001272545000001\"\n[1] \"WOS:001271887300006\"\n[1] \"WOS:001241648000004\"\n[1] \"WOS:001272187000001\"\n[1] \"WOS:001272816100001\"\n[1] \"WOS:001272815",
        "100001\"\n[1] \"WOS:001272756600006\"\n[1] \"WOS:001272421900001\"\n[1] \"WOS:001272946200001\"\n[1] \"WOS:001272912100001\"\n[1] \"WOS:001272028400009\"\n[1] \"WOS:001272984000001\"\n[1] \"WOS:001273111800001\"\n[1] \"WOS:001272669700001\"\n[1] \"WOS:001272479200001\"\n[1] \"WOS:001272889800001\"\n[1] \"WOS:001272840000003\"\n[1] \"WOS:001264845300052\"\n[1] \"WOS:001264845300065\"\n[1] \"WOS:001253918900005\"\n[1] \"WOS:001253884500036\"\n[1] \"WOS:001272222400001\"\n[1] \"WOS:001272777100001\"\n[1] \"WOS:001270156100001\"\n[1] \"WOS:001271885300001\"\n[1] \"WOS:0",
        "01271796400001\"\n[1] \"WOS:001272256900001\"\n[1] \"WOS:001271890500001\"\n[1] \"WOS:001272099900001\"\n[1] \"WOS:001272301200001\"\n[1] \"WOS:001272290400001\"\n[1] \"WOS:001271848300001\"\n[1] \"WOS:001272032500001\"\n[1] \"WOS:001272169500001\"\n[1] \"WOS:001272295700024\"\n[1] \"WOS:001272158500001\"\n[1] \"WOS:001271712900001\"\n[1] \"WOS:001250972400003\"\n[1] \"WOS:001272723900001\"\n[1] \"WOS:001250102600003\"\n[1] \"WOS:001271551700001\"\n[1] \"WOS:001271312100016\"\n[1] \"WOS:001271246800005\"\n[1] \"WOS:001272060100001\"\n[1] \"WOS:001271284100004\"\n[1",
        "] \"WOS:001271918700001\"\n[1] \"WOS:001265199000036\"\n[1] \"WOS:001226680300016\"\n[1] \"WOS:001271578300002\"\n[1] \"WOS:001272372800004\"\n[1] \"WOS:001271516100001\"\n[1] \"WOS:001271629000001\"\n[1] \"WOS:001271944300003\"\n[1] \"WOS:001271299500001\"\n[1] \"WOS:001271303100001\"\n[1] \"WOS:001272244700001\"\n[1] \"WOS:001271828100001\"\n[1] \"WOS:001268265400001\"\n[1] \"WOS:001271428900009\"\n[1] \"WOS:001271939500001\"\n[1] \"WOS:001196800603007\"\n[1] \"WOS:001272600500001\"\n[1] \"WOS:001272266100001\"\n[1] \"WOS:001271353200001\"\n[1] \"WOS:00127222510",
        "0001\"\n[1] \"WOS:001270390400035\"\n[1] \"WOS:001270390400001\"\n[1] \"WOS:001270390400091\"\n[1] \"WOS:001270390400003\"\n[1] \"WOS:001268499100001\"\n[1] \"WOS:001270230700001\"\n[1] \"WOS:001269601900001\"\n[1] \"WOS:001243933100063\"\n[1] \"WOS:001263223100010\"\n[1] \"WOS:001267270000001\"\n[1] \"WOS:001270672000001\"\n[1] \"WOS:001270782900001\"\n[1] \"WOS:001265226600027\"\n[1] \"WOS:001271186000001\"\n[1] \"WOS:001271719500001\"\n[1] \"WOS:001271182100001\"\n[1] \"WOS:001266670000005\"\n[1] \"WOS:001271185200001\"\n[1] \"WOS:001271399400001\"\n[1] \"WOS:001",
        "270990500001\"\n[1] \"WOS:001270539400003\"\n",
        "> ",
        "> ",
        "output <- paste(output, \"EF\", sep = \"\")",
        "> ",
        "writeLines(output, \"file1.txt\")",
        "> ",
        "writeLines(output, \"file1.txt\")",
        "> ",
        "biblioshiny()",
        "\nListening on http://127.0.0.1:4478\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [================================================================================] 19.81GB/s, eta:  0s\r                                                                                                                     \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [================================================================================] 16.64GB/s, eta:  0s\r                                                                                                                     \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [===============================================================================] 105.84MB/s, eta:  0s\r                                                                                                                     \r",
        "Warning: Error in rep: invalid 'times' argument\n  155: \u001B[37misi2df\u001B[39m\n  154: \u001B[37mconvert2df\u001B[39m\n  150: \u001B[34m\u001B[1meventReactiveValueFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#222]\u001B[22m\u001B[39m\n  106: \u001B[37mDATAloading\u001B[39m\n  105: \u001B[34m\u001B[1mexprFunc [/Users/pavel.kasyanov/Library/R/arm64/4.4/library/bibliometrix/biblioshiny/server.R#439]\u001B[22m\u001B[39m\n  104: \u001B[37mwidgetFunc\u001B[39m\n  103: \u001B[37m::\nhtmlwidgets\nshinyRenderWidget\u001B[39m\n  102: \u001B[37mfunc\u001B[39m\n   89: \u001B[37mrenderF",
        "unc\u001B[39m\n   88: \u001B[37mrenderFunc\u001B[39m\n   84: \u001B[37mrenderFunc\u001B[39m\n   83: \u001B[37moutput$contents\u001B[39m\n    2: \u001B[37mrunApp\u001B[39m\n    1: \u001B[37mbiblioshiny\u001B[39m\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [================================================================================] 88.48MB/s, eta:  0s\r                                                                                                                     \r\nWarning:\nIn your file, some mandatory metadata are missing. Bibliometrix functions may not work properly!\n\nPlease, take a look at the vignettes:\n- 'Data Importing and Converting' (https://www.bibliometrix.org/v",
        "ignettes/Data-Importing-and-Converting.html)\n- 'A brief introduction to bibliometrix' (https://www.bibliometrix.org/vignettes/Introduction_to_bibliometrix.html)\n\n\nMissing fields:  CR \nDone!\n\n\nGenerating affiliation field tag AU_UN from C1:  Done!\n\n",
        "\n",
        "> ",
        "output <- \"FN Clarivate Analytics Web of Science\\nVR 1.0\\n\"",
        "> ",
        "> ",
        "for(i in rownames(initial_json$Data$Records$records$REC)) {",
        "+ ",
        "  record <- initial_json$Data$Records$records$REC[i, ]",
        "+ ",
        "  print(record$UID)",
        "+ ",
        "  output <- paste(output, \"PT \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"AU \", fetch_author_names(record$static_data$summary$names$name[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TI \", fetch_doc_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SO \", fetch_source_title(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"JI \", fetch_source_abbreviation(record$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DT \", record$static_data$summary$doctypes$doctype[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DE \", fetch_keywords(record$static_data$fullrecord_metadata$keywords$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ID \", fetch_keywords(record$static_data$item$keywords_plus$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"AB \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"C1 \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"RP \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"PY \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"SC \", \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"TC \", fetch_times_cited(record$dynamic_data$citation_related$tc_list$silo_tc[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"UT \", gsub('WOS:', 'ISI', record$UID), \"\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"DB WOS\\n\", sep = \"\")",
        "+ ",
        "  output <- paste(output, \"ER\\n\\n\", sep = \"\")",
        "+ ",
        "}",
        "[1] \"WOS:001272756600008\"\n[1] \"WOS:001272101600001\"\n[1] \"WOS:001272423400001\"\n[1] \"WOS:001234953400009\"\n[1] \"WOS:001272816500001\"\n[1] \"WOS:001272815000001\"\n[1] \"WOS:001272814700001\"\n[1] \"WOS:001272697500013\"\n[1] \"WOS:001271832100001\"\n[1] \"WOS:001272816000001\"\n[1] \"WOS:001273099300001\"\n[1] \"WOS:001256619700278\"\n[1] \"WOS:001273057900001\"\n[1] \"WOS:001272122700001\"\n[1] \"WOS:001272545000001\"\n[1] \"WOS:001271887300006\"\n[1] \"WOS:001241648000004\"\n[1] \"WOS:001272187000001\"\n[1] \"WOS:001272816100001\"\n[1] \"WOS:001272815",
        "100001\"\n[1] \"WOS:001272756600006\"\n[1] \"WOS:001272421900001\"\n[1] \"WOS:001272946200001\"\n[1] \"WOS:001272912100001\"\n[1] \"WOS:001272028400009\"\n[1] \"WOS:001272984000001\"\n[1] \"WOS:001273111800001\"\n[1] \"WOS:001272669700001\"\n[1] \"WOS:001272479200001\"\n[1] \"WOS:001272889800001\"\n[1] \"WOS:001272840000003\"\n[1] \"WOS:001264845300052\"\n[1] \"WOS:001264845300065\"\n[1] \"WOS:001253918900005\"\n[1] \"WOS:001253884500036\"\n[1] \"WOS:001272222400001\"\n[1] \"WOS:001272777100001\"\n[1] \"WOS:001270156100001\"\n[1] \"WOS:001271885300001\"\n[1] \"WOS:0",
        "01271796400001\"\n[1] \"WOS:001272256900001\"\n[1] \"WOS:001271890500001\"\n[1] \"WOS:001272099900001\"\n[1] \"WOS:001272301200001\"\n[1] \"WOS:001272290400001\"\n[1] \"WOS:001271848300001\"\n[1] \"WOS:001272032500001\"\n[1] \"WOS:001272169500001\"\n[1] \"WOS:001272295700024\"\n[1] \"WOS:001272158500001\"\n[1] \"WOS:001271712900001\"\n[1] \"WOS:001250972400003\"\n[1] \"WOS:001272723900001\"\n[1] \"WOS:001250102600003\"\n[1] \"WOS:001271551700001\"\n[1] \"WOS:001271312100016\"\n[1] \"WOS:001271246800005\"\n[1] \"WOS:001272060100001\"\n[1] \"WOS:001271284100004\"\n[1",
        "] \"WOS:001271918700001\"\n[1] \"WOS:001265199000036\"\n[1] \"WOS:001226680300016\"\n[1] \"WOS:001271578300002\"\n[1] \"WOS:001272372800004\"\n[1] \"WOS:001271516100001\"\n[1] \"WOS:001271629000001\"\n[1] \"WOS:001271944300003\"\n[1] \"WOS:001271299500001\"\n[1] \"WOS:001271303100001\"\n[1] \"WOS:001272244700001\"\n[1] \"WOS:001271828100001\"\n[1] \"WOS:001268265400001\"\n[1] \"WOS:001271428900009\"\n[1] \"WOS:001271939500001\"\n[1] \"WOS:001196800603007\"\n[1] \"WOS:001272600500001\"\n[1] \"WOS:001272266100001\"\n[1] \"WOS:001271353200001\"\n[1] \"WOS:00127222510",
        "0001\"\n[1] \"WOS:001270390400035\"\n[1] \"WOS:001270390400001\"\n[1] \"WOS:001270390400091\"\n[1] \"WOS:001270390400003\"\n[1] \"WOS:001268499100001\"\n[1] \"WOS:001270230700001\"\n[1] \"WOS:001269601900001\"\n[1] \"WOS:001243933100063\"\n[1] \"WOS:001263223100010\"\n[1] \"WOS:001267270000001\"\n[1] \"WOS:001270672000001\"\n[1] \"WOS:001270782900001\"\n[1] \"WOS:001265226600027\"\n[1] \"WOS:001271186000001\"\n[1] \"WOS:001271719500001\"\n[1] \"WOS:001271182100001\"\n[1] \"WOS:001266670000005\"\n[1] \"WOS:001271185200001\"\n[1] \"WOS:001271399400001\"\n[1] \"WOS:001",
        "270990500001\"\n[1] \"WOS:001270539400003\"\n",
        "> ",
        "> ",
        "output <- paste(output, \"EF\", sep = \"\")",
        "> ",
        "writeLines(output, \"file1.txt\")",
        "> ",
        "biblioshiny()",
        "\nListening on http://127.0.0.1:4478\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [================================================================================] 19.97GB/s, eta:  0s\r                                                                                                                     \r\nWarning:\nIn your file, some mandatory metadata are missing. Bibliometrix functions may not work properly!\n\nPlease, take a look at the vignettes:\n- 'Data Importing and Converting' (https://www.bibliometrix.org/v",
        "ignettes/Data-Importing-and-Converting.html)\n- 'A brief introduction to bibliometrix' (https://www.bibliometrix.org/vignettes/Introduction_to_bibliometrix.html)\n\n\nMissing fields:  CR \nDone!\n\n\nGenerating affiliation field tag AU_UN from C1:  Done!\n\n\nRemoved  100 duplicated documents\n",
        "\n",
        "> ",
        "object <- initial_json$Data$Records$records$REC",
        "> ",
        "View(object)",
        "> ",
        "# Load necessary libraries",
        "> ",
        "library(httr)",
        "> ",
        "library(jsonlite)",
        "> ",
        "library(bibliometrix)",
        "> ",
        "> ",
        "# Load the Web of Science Starter API key",
        "> ",
        "source('apikeys.R')",
        "> ",
        "> ",
        "# Define your search query",
        "> ",
        "search_query <- \"TS=Bibliometric*\"",
        "> ",
        "> ",
        "# Functions to process the JSON data into a tab-delimited file",
        "> ",
        "fetch_author_names <- function(x) {",
        "+ ",
        "  if(is.null(nrow(x))) {",
        "+ ",
        "    return(x$full_name)",
        "+ ",
        "  } else {",
        "+ ",
        "    return(paste(x[, \"full_name\"], collapse = \"\\n   \"))",
        "+ ",
        "  }",
        "+ ",
        "}",
        "> ",
        "> ",
        "fetch_doc_title <- function(x) {",
        "+ ",
        "  row <- x[x$type == 'item', ]",
        "+ ",
        "  return(row$content)",
        "+ ",
        "}",
        "> ",
        "> ",
        "fetch_source_title <- function(x) {",
        "+ ",
        "  row <- x[x$type == 'source', ]",
        "+ ",
        "  return(row$content)",
        "+ ",
        "}",
        "> ",
        "> ",
        "fetch_source_abbreviation <- function(x) {",
        "+ ",
        "  if('abbrev_iso' %in% x$type) {",
        "+ ",
        "    row <- x[x$type == 'abbrev_iso', ]",
        "+ ",
        "    return(row$content)",
        "+ ",
        "  } else {",
        "+ ",
        "    return(\"\")",
        "+ ",
        "  }",
        "+ ",
        "}",
        "> ",
        "> ",
        "fetch_keywords <- function(x) {",
        "+ ",
        "  return(paste(x, collapse = \"; \"))",
        "+ ",
        "}",
        "> ",
        "> ",
        "fetch_times_cited <- function(x) {",
        "+ ",
        "  row <- x[x$coll_id == 'WOS', ]",
        "+ ",
        "  return(row$local_count)",
        "+ ",
        "}",
        "> ",
        "> ",
        "general_fetcher <- function(x) {",
        "+ ",
        "  return_string <= \"\"",
        "+ ",
        "  for(i in rownames(x)) {",
        "+ ",
        "    print(x[i, ]$UID)",
        "+ ",
        "    return_string <- paste(return_string, \"PT \", \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"AU \", fetch_author_names(x[i, ]$static_data$summary$names$name[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"TI \", fetch_doc_title(x[i, ]$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"SO \", fetch_source_title(x[i, ]$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"JI \", fetch_source_abbreviation(x[i, ]$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"DT \", x[i, ]$static_data$summary$doctypes$doctype[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"DE \", fetch_keywords(x[i, ]$static_data$fullrecord_metadata$keywords$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"ID \", fetch_keywords(x[i, ]$static_data$item$keywords_plus$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"AB \", \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"C1 \", \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"RP \", \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"PY \", x[i, ]$static_data$summary$pub_info$pubyear[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"SC \", \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"TC \", fetch_times_cited(x[i, ]$dynamic_data$citation_related$tc_list$silo_tc[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"UT \", x[i, ]$UID, \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"ER\\n\\n\", sep = \"\")",
        "+ ",
        "  }",
        "+ ",
        "  return(return_string)",
        "+ ",
        "}",
        "> ",
        "# Set up the parameters for the API request",
        "> ",
        "params <- list(",
        "+ ",
        "  'databaseId' = 'WOS',",
        "+ ",
        "  'count' = 100,",
        "+ ",
        "  'usrQuery' = search_query,",
        "+ ",
        "  'firstRecord' = 1",
        "+ ",
        ")",
        "> ",
        "> ",
        "# Make the initial GET request to the Web of Science Expanded API",
        "> ",
        "response <- GET(",
        "+ ",
        "  \"https://wos-api.clarivate.com/api/wos\",",
        "+ ",
        "  query = params,",
        "+ ",
        "  add_headers(`X-ApiKey` = expanded_apikey)",
        "+ ",
        ")",
        "> ",
        "> ",
        "# Parse the initial JSON content of the response",
        "> ",
        "initial_content <- content(response, as = \"text\", encoding = \"UTF-8\")",
        "> ",
        "initial_json <- fromJSON(initial_content, flatten = FALSE)",
        "> ",
        "> ",
        "output <- \"FN Clarivate Analytics Web of Science\\nVR 1.0\\n\"",
        "> ",
        "output <- paste(output, general_fetcher(initial_json$Data$Records$records$REC), sep = \"\")",
        "Error in general_fetcher(initial_json$Data$Records$records$REC) : \n  object 'return_string' not found\n",
        "Called from: general_fetcher(initial_json$Data$Records$records$REC)\n",
        "Browse[1]> ",
        "> ",
        "general_fetcher <- function(x) {",
        "+ ",
        "  return_string <- \"\"",
        "+ ",
        "  for(i in rownames(x)) {",
        "+ ",
        "    print(x[i, ]$UID)",
        "+ ",
        "    return_string <- paste(return_string, \"PT \", \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"AU \", fetch_author_names(x[i, ]$static_data$summary$names$name[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"TI \", fetch_doc_title(x[i, ]$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"SO \", fetch_source_title(x[i, ]$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"JI \", fetch_source_abbreviation(x[i, ]$static_data$summary$titles$title[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"DT \", x[i, ]$static_data$summary$doctypes$doctype[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"DE \", fetch_keywords(x[i, ]$static_data$fullrecord_metadata$keywords$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"ID \", fetch_keywords(x[i, ]$static_data$item$keywords_plus$keyword[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"AB \", \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"C1 \", \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"RP \", \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"PY \", x[i, ]$static_data$summary$pub_info$pubyear[[1]], \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"SC \", \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"TC \", fetch_times_cited(x[i, ]$dynamic_data$citation_related$tc_list$silo_tc[[1]]), \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"UT \", x[i, ]$UID, \"\\n\", sep = \"\")",
        "+ ",
        "    return_string <- paste(return_string, \"ER\\n\\n\", sep = \"\")",
        "+ ",
        "  }",
        "+ ",
        "  return(return_string)",
        "+ ",
        "}",
        "> ",
        "output <- paste(output, general_fetcher(initial_json$Data$Records$records$REC), sep = \"\")",
        "[1] \"WOS:001272756600008\"\n[1] \"WOS:001272101600001\"\n[1] \"WOS:001272423400001\"\n[1] \"WOS:001234953400009\"\n[1] \"WOS:001272816500001\"\n[1] \"WOS:001272815000001\"\n[1] \"WOS:001272814700001\"\n[1] \"WOS:001272697500013\"\n[1] \"WOS:001271832100001\"\n[1] \"WOS:001272816000001\"\n[1] \"WOS:001273099300001\"\n[1] \"WOS:001256619700278\"\n[1] \"WOS:001273057900001\"\n[1] \"WOS:001272122700001\"\n[1] \"WOS:001272545000001\"\n[1] \"WOS:001271887300006\"\n[1] \"WOS:001241648000004\"\n[1] \"WOS:001272187000001\"\n[1] \"WOS:001272816100001\"\n[1] \"WOS:001272815",
        "100001\"\n[1] \"WOS:001272756600006\"\n[1] \"WOS:001272421900001\"\n[1] \"WOS:001272946200001\"\n[1] \"WOS:001272912100001\"\n[1] \"WOS:001272028400009\"\n[1] \"WOS:001272984000001\"\n[1] \"WOS:001273111800001\"\n[1] \"WOS:001272669700001\"\n[1] \"WOS:001272479200001\"\n[1] \"WOS:001272889800001\"\n[1] \"WOS:001272840000003\"\n[1] \"WOS:001264845300052\"\n[1] \"WOS:001264845300065\"\n[1] \"WOS:001253918900005\"\n[1] \"WOS:001253884500036\"\n[1] \"WOS:001272222400001\"\n[1] \"WOS:001272777100001\"\n[1] \"WOS:001270156100001\"\n[1] \"WOS:001271885300001\"\n[1] \"WOS:0",
        "01271796400001\"\n[1] \"WOS:001272256900001\"\n[1] \"WOS:001271890500001\"\n[1] \"WOS:001272099900001\"\n[1] \"WOS:001272301200001\"\n[1] \"WOS:001272290400001\"\n[1] \"WOS:001271848300001\"\n[1] \"WOS:001272032500001\"\n[1] \"WOS:001272169500001\"\n[1] \"WOS:001272295700024\"\n[1] \"WOS:001272158500001\"\n[1] \"WOS:001271712900001\"\n[1] \"WOS:001250972400003\"\n[1] \"WOS:001272723900001\"\n[1] \"WOS:001250102600003\"\n[1] \"WOS:001271551700001\"\n[1] \"WOS:001271312100016\"\n[1] \"WOS:001271246800005\"\n[1] \"WOS:001272060100001\"\n[1] \"WOS:001271284100004\"\n[1",
        "] \"WOS:001271918700001\"\n[1] \"WOS:001265199000036\"\n[1] \"WOS:001226680300016\"\n[1] \"WOS:001271578300002\"\n[1] \"WOS:001272372800004\"\n[1] \"WOS:001271516100001\"\n[1] \"WOS:001271629000001\"\n[1] \"WOS:001271944300003\"\n[1] \"WOS:001271299500001\"\n[1] \"WOS:001271303100001\"\n[1] \"WOS:001272244700001\"\n[1] \"WOS:001271828100001\"\n[1] \"WOS:001268265400001\"\n[1] \"WOS:001271428900009\"\n[1] \"WOS:001271939500001\"\n[1] \"WOS:001196800603007\"\n[1] \"WOS:001272600500001\"\n[1] \"WOS:001272266100001\"\n[1] \"WOS:001271353200001\"\n[1] \"WOS:00127222510",
        "0001\"\n[1] \"WOS:001270390400035\"\n[1] \"WOS:001270390400001\"\n[1] \"WOS:001270390400091\"\n[1] \"WOS:001270390400003\"\n[1] \"WOS:001268499100001\"\n[1] \"WOS:001270230700001\"\n[1] \"WOS:001269601900001\"\n[1] \"WOS:001243933100063\"\n[1] \"WOS:001263223100010\"\n[1] \"WOS:001267270000001\"\n[1] \"WOS:001270672000001\"\n[1] \"WOS:001270782900001\"\n[1] \"WOS:001265226600027\"\n[1] \"WOS:001271186000001\"\n[1] \"WOS:001271719500001\"\n[1] \"WOS:001271182100001\"\n[1] \"WOS:001266670000005\"\n[1] \"WOS:001271185200001\"\n[1] \"WOS:001271399400001\"\n[1] \"WOS:001",
        "270990500001\"\n[1] \"WOS:001270539400003\"\n",
        "> ",
        "output <- paste(output, \"EF\", sep = \"\")",
        "> ",
        "writeLines(output, \"file1.txt\")",
        "> ",
        "biblioshiny()",
        "\nListening on http://127.0.0.1:4478\n",
        "\nConverting your isi collection into a bibliographic dataframe\n\n\rindexing 0.txt [===================================================================================================] 16.70GB/s, eta:  0s\r                                                                                                                                        \r\nWarning:\nIn your file, some mandatory metadata are missing. Bibliometrix functions may not work properly!\n\nPlease, take a look at the vignettes:\n- 'Data Importing and Conve",
        "rting' (https://www.bibliometrix.org/vignettes/Data-Importing-and-Converting.html)\n- 'A brief introduction to bibliometrix' (https://www.bibliometrix.org/vignettes/Introduction_to_bibliometrix.html)\n\n\nMissing fields:  CR \nDone!\n\n\nGenerating affiliation field tag AU_UN from C1:  Done!\n\n\nRemoved  100 duplicated documents\n\nRestarting R session...\n\n"
    ]
}